#include "driverlib.h"
#include "board.h"
#include "shared_vars.h"

#define B0 0.000386f
#define B1 0.000117f
#define B2 -0.000269f
#define A1 -1.521886f
#define A2 0.521886f

#define UL 1
#define LL 0

#define EPWM_PRD_VALUE (2500.0f)

float x[3];
float y[3];

float32_t g_voltage_output_adc;  // variável global apenas para observação
float32_t g_duty_cycle;          // variável global apenas para observação

__interrupt void Cla1Task1()
{

    uint16_t adc_value = ADC_readResult(ADC0_RESULT_BASE, ADC_SOC_NUMBER0);

    float32_t voltage_output_adc;

    voltage_output_adc =  adc_value * ADC_FACTOR;
    g_voltage_output_adc = voltage_output_adc;

    x[2] = x[1]; x[1] = x[0]; x[0] = cla_reference - voltage_output_adc;

    y[2] = y[1]; y[1] = y[0];
    y[0] = B0*x[0] + B1*x[1] + B2*x[2] - A1*y[1] - A2*y[2];

    y[0] = (y[0] > UL) ? UL : y[0];
    y[0] = (y[0] < LL) ? LL : y[0];

    float32_t duty_cycle = y[0];
    g_duty_cycle = duty_cycle;

    uint16_t compa = duty_cycle*EPWM_PRD_VALUE;
    EPWM_setCounterCompareValue(myEPWM0_BASE, EPWM_COUNTER_COMPARE_A, compa);

}
